Q1)
XML

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <EditText
        android:id="@+id/first_number_edit_text"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:hint="Enter first number"
        android:inputType="number"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        android:layout_margin="16dp"/>

    <EditText
        android:id="@+id/second_number_edit_text"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:hint="Enter second number"
        android:inputType="number"
        app:layout_constraintTop_toBottomOf="@id/first_number_edit_text"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        android:layout_margin="16dp"/>

    <TextView
        android:id="@+id/result_text_view"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Result"
        app:layout_constraintTop_toBottomOf="@id/second_number_edit_text"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        android:layout_margin="16dp"/>

    <Button
        android:id="@+id/add_button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Add"
        app:layout_constraintTop_toBottomOf="@id/result_text_view"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        android:layout_margin="8dp"/>

    <Button
        android:id="@+id/subtract_button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Subtract"
        app:layout_constraintTop_toBottomOf="@id/add_button"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        android:layout_margin="8dp"/>

    <Button
        android:id="@+id/multiply_button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Multiply"
        app:layout_constraintTop_toBottomOf="@id/subtract_button"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        android:layout_margin="8dp"/>

    <Button
        android:id="@+id/divide_button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Divide"
        app:layout_constraintTop_toBottomOf="@id/multiply_button"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        android:layout_margin="8dp"/>

</androidx.constraintlayout.widget.ConstraintLayout>
------------------------------------------------------------------------------------
JAVA

package com.example.slip4_q1;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private EditText firstNumberEditText, secondNumberEditText;
    private TextView resultTextView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        firstNumberEditText = findViewById(R.id.first_number_edit_text);
        secondNumberEditText = findViewById(R.id.second_number_edit_text);
        resultTextView = findViewById(R.id.result_text_view);

        Button addButton = findViewById(R.id.add_button);
        Button subtractButton = findViewById(R.id.subtract_button);
        Button multiplyButton = findViewById(R.id.multiply_button);
        Button divideButton = findViewById(R.id.divide_button);

        addButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                calculate('+');
            }
        });

        subtractButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                calculate('-');
            }
        });

        multiplyButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                calculate('*');
            }
        });

        divideButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                calculate('/');
            }
        });
    }

    private void calculate(char operation) {
        try {
            double num1 = Double.parseDouble(firstNumberEditText.getText().toString());
            double num2 = Double.parseDouble(secondNumberEditText.getText().toString());
            double result = 0;

            switch (operation) {
                case '+':
                    result = num1 + num2;
                    break;
                case '-':
                    result = num1 - num2;
                    break;
                case '*':
                    result = num1 * num2;
                    break;
                case '/':
                    if (num2 != 0) {
                        result = num1 / num2;
                    } else {
                        resultTextView.setText("Cannot divide by zero");
                        return;
                    }
                    break;
            }

            resultTextView.setText("Result: " + result);
        } catch (NumberFormatException e) {
            resultTextView.setText("Invalid input");
        }
    }
}
====================================================================================

Q.2

-----------------
activity_main.xml
---------------------

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

</RelativeLayout>

------------------------
MainActivity.java
--------------------------

package com.example.customer;

import android.content.ContentValues;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private CustomerDbHelper dbHelper;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        dbHelper = new CustomerDbHelper(this);

        // Insert new customer details
        insertCustomer("John Doe", "123 Main St", "1234567890");

        // Show all customer details on toast message
        showAllCustomers();
    }

    private void insertCustomer(String name, String address, String phone) {
        SQLiteDatabase db = dbHelper.getWritableDatabase();

        ContentValues values = new ContentValues();
        values.put(CustomerContract.CustomerEntry.COLUMN_NAME_NAME, name);
        values.put(CustomerContract.CustomerEntry.COLUMN_NAME_ADDRESS, address);
        values.put(CustomerContract.CustomerEntry.COLUMN_NAME_PHONE, phone);

        long newRowId = db.insert(CustomerContract.CustomerEntry.TABLE_NAME, null, values);

        if (newRowId != -1) {
            Toast.makeText(this, "Customer inserted with ID: " + newRowId, Toast.LENGTH_SHORT).show();
        } else {
            Toast.makeText(this, "Error inserting customer", Toast.LENGTH_SHORT).show();
        }
    }

    private void showAllCustomers() {
        SQLiteDatabase db = dbHelper.getReadableDatabase();

        String[] projection = {
                CustomerContract.CustomerEntry._ID,
                CustomerContract.CustomerEntry.COLUMN_NAME_NAME,
                CustomerContract.CustomerEntry.COLUMN_NAME_ADDRESS,
                CustomerContract.CustomerEntry.COLUMN_NAME_PHONE
        };

        Cursor cursor = db.query(
                CustomerContract.CustomerEntry.TABLE_NAME,
                projection,
                null,
                null,
                null,
                null,
                null
        );

        StringBuilder stringBuilder = new StringBuilder();
        while (cursor.moveToNext()) {
            long id = cursor.getLong(cursor.getColumnIndexOrThrow(CustomerContract.CustomerEntry._ID));
            String name = cursor.getString(cursor.getColumnIndexOrThrow(CustomerContract.CustomerEntry.COLUMN_NAME_NAME));
            String address = cursor.getString(cursor.getColumnIndexOrThrow(CustomerContract.CustomerEntry.COLUMN_NAME_ADDRESS));
            String phone = cursor.getString(cursor.getColumnIndexOrThrow(CustomerContract.CustomerEntry.COLUMN_NAME_PHONE));

            stringBuilder.append("ID: ").append(id).append(", Name: ").append(name)
                    .append(", Address: ").append(address).append(", Phone: ").append(phone)
                    .append("\n");
        }
        cursor.close();

        Toast.makeText(this, stringBuilder.toString(), Toast.LENGTH_LONG).show();
    }
}

----------------------
customerdbHelper.java
----------------------------------
package com.example.customer;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

public class CustomerDbHelper extends SQLiteOpenHelper {
    private static final String DATABASE_NAME = "customer.db";
    private static final int DATABASE_VERSION = 1;

    private static final String SQL_CREATE_ENTRIES =
            "CREATE TABLE " + CustomerContract.CustomerEntry.TABLE_NAME + " (" +
                    CustomerContract.CustomerEntry._ID + " INTEGER PRIMARY KEY," +
                    CustomerContract.CustomerEntry.COLUMN_NAME_NAME + " TEXT," +
                    CustomerContract.CustomerEntry.COLUMN_NAME_ADDRESS + " TEXT," +
                    CustomerContract.CustomerEntry.COLUMN_NAME_PHONE + " TEXT)";

    private static final String SQL_DELETE_ENTRIES =
            "DROP TABLE IF EXISTS " + CustomerContract.CustomerEntry.TABLE_NAME;

    public CustomerDbHelper(Context context) {
        super(context, DATABASE_NAME, null, DATABASE_VERSION);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        db.execSQL(SQL_CREATE_ENTRIES);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL(SQL_DELETE_ENTRIES);
        onCreate(db);
    }
}

----------------------------------
customerContract.java
---------------------------------

package com.example.customer;

import android.provider.BaseColumns;

public final class CustomerContract {
    private CustomerContract() {} // To prevent accidental instantiation

    public static class CustomerEntry implements BaseColumns {
        public static final String TABLE_NAME = "Customer";
        public static final String COLUMN_NAME_NAME = "name";
        public static final String COLUMN_NAME_ADDRESS = "address";
        public static final String COLUMN_NAME_PHONE = "phno";
    }
}






